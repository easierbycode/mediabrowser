angular.module('browse/browse.tpl.html', []).run([
  '$templateCache', function(a) {
    return a.put('browse/browse.tpl.html', templates.browse);
  }
]);

angular.module('app').requires.push('ui.bootstrap');

angular.module('app').controller('BrowseCtrl', [
  '$scope', '$rootScope', '$location', 'BrowseSharedData', 'containerTitle', 'containerId', 'BrowseService', 'AlertService', 'PreferencesService', 'QueueService', 'CATEGORY_ID_IMAGE', 'UrlService', '$http', '$modal', function(a, b, c, d, e, f, g, h, i, j, k, UrlService, $http, $modal) {
    a.browse = b.loggedIn ? d.newData() : null;
    a.thubmnailView = i.isGridView();
    a.containerTitle = e;
    a.containerId = f;
    a.containerFileType = g.getContainerFileType(f);
    a.lastPlayedItemId = null;
    b.$broadcast('containerChanged', f, e);
    a.goBack = function() {
      c.url(a.backButtonUrl);
    };
    a.numberOfLoadedItems = function() {
      if (a.browse) {
        return a.browse.items.length;
      } else {
        return 0;
      }
    };
    a.objectAction = function(d, e, f, i, j) {
      if (d) {
        c.url(g.generateBrowseUrl(d, e, i, j));
      } else {
        h.clear();
      }
      a.selectedItemId = f;
      if (a.containerFileType === k) {
        b.$broadcast('openImageViewer', f, 'browse', a.containerFileType);
      } else {
        b.$broadcast('openPlayer', f, 'browse', a.containerFileType, a.containerTitle);
      }
    };
    a.generateBrowseUrl = function(a, b, c) {
      return '#' + g.generateBrowseUrl(!0, a, b, c);
    };
    a.addToQueue = function(b) {
      h.clear();
      j.addItemToQueue(a.browse.findItemById(b));
    };
    a.$on('viewChanged', function(b, c) {
      a.thubmnailView = c;
    });
    a.$on('playerClosed', function(b, c) {
      a.lastPlayedItemId = c;
    });
    return a.showDownloadModal = function(id) {
      var url;
      url = UrlService.secureUrl("/cds/browse/serviigo_standard/" + id + "/BrowseMetadata/items/0/0");
      return $http.get(url).success(function(resp) {
        var download, template;
        download = resp.objects[0].contentUrls[0];
        template = templates.downloadModal({
          resolution: download.resolution,
          size: ((download.fileSize / 1000000).toFixed(1)) + " MB",
          title: resp.objects[0].title,
          url: UrlService.secureUrl(download.url)
        });
        return $modal.open({
          animation: true,
          template: template
        });
      });
    };
  }
]);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiL1VzZXJzL2Vhc2llcmJ5Y29kZS9XZWJzdG9ybVByb2plY3RzL21lZGlhYnJvd3Nlci9wdWJsaWMvY3VzdG9tL2phdmFzY3JpcHRzL2N1c3RvbS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9lYXNpZXJieWNvZGUvV2Vic3Rvcm1Qcm9qZWN0cy9tZWRpYWJyb3dzZXIvY3VzdG9tL2phdmFzY3JpcHRzL2N1c3RvbS5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxDQUFDLE1BQVIsQ0FBZ0Isd0JBQWhCLEVBQXlDLEVBQXpDLENBQTRDLENBQUMsR0FBN0MsQ0FBaUQ7RUFDOUMsZ0JBRDhDLEVBRS9DLFNBQUMsQ0FBRCxHQUFBO1dBQ0UsQ0FBQyxDQUFDLEdBQUYsQ0FBTyx3QkFBUCxFQUFnQyxTQUFTLENBQUMsTUFBMUMsRUFERjtFQUFBLENBRitDO0NBQWpELENBQUEsQ0FBQTs7QUFBQSxPQU9PLENBQUMsTUFBUixDQUFpQixLQUFqQixDQUF1QixDQUFDLFFBQVEsQ0FBQyxJQUFqQyxDQUF1QyxjQUF2QyxDQVBBLENBQUE7O0FBQUEsT0FVTyxDQUFDLE1BQVIsQ0FBZ0IsS0FBaEIsQ0FBcUIsQ0FBQyxVQUF0QixDQUFrQyxZQUFsQyxFQUErQztFQUM1QyxRQUQ0QyxFQUU1QyxZQUY0QyxFQUc1QyxXQUg0QyxFQUk1QyxrQkFKNEMsRUFLNUMsZ0JBTDRDLEVBTTVDLGFBTjRDLEVBTzVDLGVBUDRDLEVBUTVDLGNBUjRDLEVBUzVDLG9CQVQ0QyxFQVU1QyxjQVY0QyxFQVc1QyxtQkFYNEMsRUFhNUMsWUFiNEMsRUFjNUMsT0FkNEMsRUFlNUMsUUFmNEMsRUFnQjdDLFNBQUMsQ0FBRCxFQUFJLENBQUosRUFBTyxDQUFQLEVBQVUsQ0FBVixFQUFhLENBQWIsRUFBZ0IsQ0FBaEIsRUFBbUIsQ0FBbkIsRUFBc0IsQ0FBdEIsRUFBeUIsQ0FBekIsRUFBNEIsQ0FBNUIsRUFBK0IsQ0FBL0IsRUFBa0MsVUFBbEMsRUFBOEMs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Q0FBL0MsQ0FWQSxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiYW5ndWxhci5tb2R1bGUoJ2Jyb3dzZS9icm93c2UudHBsLmh0bWwnLCBbXSkucnVuIFtcbiAgJyR0ZW1wbGF0ZUNhY2hlJ1xuICAoYSkgLT5cbiAgICBhLnB1dCAnYnJvd3NlL2Jyb3dzZS50cGwuaHRtbCcsIHRlbXBsYXRlcy5icm93c2Vcbl1cblxuXG5hbmd1bGFyLm1vZHVsZSggJ2FwcCcgKS5yZXF1aXJlcy5wdXNoICd1aS5ib290c3RyYXAnXG5cblxuYW5ndWxhci5tb2R1bGUoJ2FwcCcpLmNvbnRyb2xsZXIgJ0Jyb3dzZUN0cmwnLCBbXG4gICckc2NvcGUnXG4gICckcm9vdFNjb3BlJ1xuICAnJGxvY2F0aW9uJ1xuICAnQnJvd3NlU2hhcmVkRGF0YSdcbiAgJ2NvbnRhaW5lclRpdGxlJ1xuICAnY29udGFpbmVySWQnXG4gICdCcm93c2VTZXJ2aWNlJ1xuICAnQWxlcnRTZXJ2aWNlJ1xuICAnUHJlZmVyZW5jZXNTZXJ2aWNlJ1xuICAnUXVldWVTZXJ2aWNlJ1xuICAnQ0FURUdPUllfSURfSU1BR0UnXG4gICMgQ1VTVE9NXG4gICdVcmxTZXJ2aWNlJ1xuICAnJGh0dHAnXG4gICckbW9kYWwnXG4gIChhLCBiLCBjLCBkLCBlLCBmLCBnLCBoLCBpLCBqLCBrLCBVcmxTZXJ2aWNlLCAkaHR0cCwgJG1vZGFsKSAtPlxuICAgIGEuYnJvd3NlID0gaWYgYi5sb2dnZWRJbiB0aGVuIGQubmV3RGF0YSgpIGVsc2UgbnVsbFxuICAgIGEudGh1Ym1uYWlsVmlldyA9IGkuaXNHcmlkVmlldygpXG4gICAgYS5jb250YWluZXJUaXRsZSA9IGVcbiAgICBhLmNvbnRhaW5lcklkID0gZlxuICAgIGEuY29udGFpbmVyRmlsZVR5cGUgPSBnLmdldENvbnRhaW5lckZpbGVUeXBlKGYpXG4gICAgYS5sYXN0UGxheWVkSXRlbUlkID0gbnVsbFxuICAgIGIuJGJyb2FkY2FzdCgnY29udGFpbmVyQ2hhbmdlZCcsIGYsIGUpXG5cbiAgICBhLmdvQmFjayA9IC0+XG4gICAgICBjLnVybCBhLmJhY2tCdXR0b25VcmxcbiAgICAgIHJldHVyblxuXG4gICAgYS5udW1iZXJPZkxvYWRlZEl0ZW1zID0gLT5cbiAgICAgIGlmIGEuYnJvd3NlIHRoZW4gYS5icm93c2UuaXRlbXMubGVuZ3RoIGVsc2UgMFxuXG4gICAgYS5vYmplY3RBY3Rpb24gPSAoZCwgZSwgZiwgaSwgaikgLT5cbiAgICAgIGlmIGQgdGhlbiBjLnVybChnLmdlbmVyYXRlQnJvd3NlVXJsKGQsIGUsIGksIGopKSBlbHNlIGguY2xlYXIoKVxuICAgICAgYS5zZWxlY3RlZEl0ZW1JZCA9IGZcbiAgICAgIGlmIGEuY29udGFpbmVyRmlsZVR5cGUgPT0gayB0aGVuIGIuJGJyb2FkY2FzdCgnb3BlbkltYWdlVmlld2VyJywgZiwgJ2Jyb3dzZScsIGEuY29udGFpbmVyRmlsZVR5cGUpIGVsc2UgYi4kYnJvYWRjYXN0KCdvcGVuUGxheWVyJywgZiwgJ2Jyb3dzZScsIGEuY29udGFpbmVyRmlsZVR5cGUsIGEuY29udGFpbmVyVGl0bGUpXG4gICAgICByZXR1cm5cblxuICAgIGEuZ2VuZXJhdGVCcm93c2VVcmwgPSAoYSwgYiwgYykgLT5cbiAgICAgICcjJyArIGcuZ2VuZXJhdGVCcm93c2VVcmwoITAsIGEsIGIsIGMpXG5cbiAgICBhLmFkZFRvUXVldWUgPSAoYikgLT5cbiAgICAgIGguY2xlYXIoKVxuICAgICAgai5hZGRJdGVtVG9RdWV1ZShhLmJyb3dzZS5maW5kSXRlbUJ5SWQoYikpXG4gICAgICByZXR1cm5cblxuICAgIGEuJG9uKCd2aWV3Q2hhbmdlZCcsIChiLCBjKSAtPlxuICAgICAgYS50aHVibW5haWxWaWV3ID0gY1xuICAgICAgcmV0dXJuXG4gICAgKVxuICAgIGEuJG9uKCdwbGF5ZXJDbG9zZWQnLCAoYiwgYykgLT5cbiAgICAgIGEubGFzdFBsYXllZEl0ZW1JZCA9IGNcbiAgICAgIHJldHVyblxuICAgIClcblxuXG4gICAgIyBDVVNUT01cblxuICAgIGEuc2hvd0Rvd25sb2FkTW9kYWwgPSAoIGlkICkgLT5cblxuICAgICAgdXJsID0gVXJsU2VydmljZS5zZWN1cmVVcmwgXCIvY2RzL2Jyb3dzZS9zZXJ2aWlnb19zdGFuZGFyZC8je2lkfS9Ccm93c2VNZXRhZGF0YS9pdGVtcy8wLzBcIlxuXG4gICAgICAkaHR0cC5nZXQoIHVybCApLnN1Y2Nlc3MgKCByZXNwICkgLT5cbiAgICAgICAgZG93bmxvYWQgID0gcmVzcC5vYmplY3RzWzBdLmNvbnRlbnRVcmxzWzBdXG4gICAgICAgIHRlbXBsYXRlICA9IHRlbXBsYXRlcy5kb3dubG9hZE1vZGFsXG4gICAgICAgICAgcmVzb2x1dGlvbiAgOiBkb3dubG9hZC5yZXNvbHV0aW9uXG4gICAgICAgICAgc2l6ZSAgICAgICAgOiBcIiN7KGRvd25sb2FkLmZpbGVTaXplIC8gMTAwMDAwMCkudG9GaXhlZCggMSApfSBNQlwiXG4gICAgICAgICAgdGl0bGUgICAgICAgOiByZXNwLm9iamVjdHNbMF0udGl0bGVcbiAgICAgICAgICB1cmwgICAgICAgICA6IFVybFNlcnZpY2Uuc2VjdXJlVXJsIGRvd25sb2FkLnVybFxuXG4gICAgICAgICRtb2RhbC5vcGVuXG4gICAgICAgICAgYW5pbWF0aW9uIDogdHJ1ZVxuICAgICAgICAgIHRlbXBsYXRlICA6IHRlbXBsYXRlXG5cblxuXSJdfQ==
